VLSI ALU:
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;


-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity alu4_bit is
    Port ( N1 : in STD_LOGIC_VECTOR (3 downto 0);
           N2 : in STD_LOGIC_VECTOR (3 downto 0);
           OP : in STD_LOGIC_VECTOR (2 downto 0);
           RESULT : out STD_LOGIC_VECTOR (3 downto 0);
           Flag : out STD_LOGIC);


end alu4_bit;
architecture Behavioral of alu4_bit is

begin

process(N1,N2,OP)
variable Temp:std_logic_vector(4 downto 0);

begin
case OP is 
when "000" =>
Temp:=('0'&N1)+N2;
RESULT<= Temp(3 downto 0);
Flag<= Temp(4);

when "001" =>
flag<='0';
if(N1>N2) then
RESULT<= N1-N2;
else
RESULT<= N2-N1;
end if;

when "010" =>
RESULT<= N1 AND N2;

when "011" =>
RESULT<= N1 OR N2;

when "100" =>
RESULT<= N1 NAND N2;

when "101" =>
RESULT<= N1 NOR N2;

when "110" =>
RESULT<= N1 XOR N2;

when others =>
RESULT<= N1 XNOR N2;

end case;
end process;

end Behavioral;

-----------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity Alu_test is
end Alu_test;

architecture Behavioral of Alu_test is

component alu4_bit is 
PORT(
n1 : IN std_logic_vector(3 downto 0);
n2 : IN std_logic_vector(3 downto 0);
op : IN std_logic_vector(2 downto 0);
result : OUT std_logic_vector(3 downto 0);
flag : OUT std_logic
);

END COMPONENT;
signal n1 : std_logic_vector(3 downto 0) := (others =>'0');----Inputs
signal n2 : std_logic_vector(3 downto 0) := (others =>'0');
signal op : std_logic_vector(2 downto 0) := (others =>'0');
signal result : std_logic_vector(3 downto 0); -----Outputs
signal flag : std_logic;
BEGIN
uut: alu4_bit PORT MAP (
n1 => n1, -- Instantiate the Unit Under Test (UUT)
n2 => n2,
op => op,
result => result,
flag => flag
);
stim_proc: process -- Stimulus process
begin
n1<="1101";
n2<="0011";
op<="000";
wait for 10 ns;
op<="001";
wait for 10 ns;
op<="010";
wait for 10 ns;
op<="011";
wait for 10 ns;
op<="100";
wait for 10 ns;
op<="101";
wait for 10 ns ;
op<="110";
wait for 10 ns;
op<="111";
wait for 10 ns ;
wait;
end process;
end Behavioral;
;

